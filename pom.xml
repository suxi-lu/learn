<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.learn</groupId>
	<artifactId>learn</artifactId>
	<packaging>pom</packaging>
	<version>0.1</version>
	<name>learn</name>
	<url>http://maven.apache.org</url>

	<modules>
		<module>dependencies</module>

		<module>rsql-parser</module>

		<module>core</module>
		<module>mybatis-core</module>
		<module>hdfs-core</module>

		<module>generate</module>

        <module>register-service</module>
        <module>config-service</module>
        <module>gateway-service</module>
        <module>hystrix-service</module>
        <module>turbine-service</module>

		<module>auth-api</module>
		<module>auth-service</module>

		<module>flowable-service</module>
		<module>batch-service</module>

		<module>learn-api</module>
		<module>learn-service</module>
	</modules>

	<properties>
		<java.version>8</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<lombok.version>1.18.0</lombok.version>
		<lombok.plugin.version>1.16.22.0</lombok.plugin.version>

		<logstash-logback-encoder.version>5.2</logstash-logback-encoder.version>

		<docker-maven-plugin.version>1.1.1</docker-maven-plugin.version>
		<baseImage>java:8</baseImage>
		<!--<dockerHost>http://118.184.219.165:2375</dockerHost>-->
		<dockerHost>http://192.168.80.130:2375</dockerHost>

        <openapi-generator-maven-plugin.version>4.0.2</openapi-generator-maven-plugin.version>
	</properties>

	<repositories>
		<repository>
			<id>nexus-aliyun</id>
			<name>Nexus aliyun</name>
			<url>http://maven.aliyun.com/nexus/content/groups/public</url>
		</repository>
		<repository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/libs-snapshot-local</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/libs-milestone-local</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>spring-releases</id>
			<name>Spring Releases</name>
			<url>https://repo.spring.io/libs-release-local</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/libs-snapshot-local</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/libs-milestone-local</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>

	<dependencies>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>

	</dependencies>

	<build>
		<pluginManagement>
			<plugins>

				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<executions>
						<execution>
							<goals>
								<goal>repackage</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<configuration>
						<source>8</source>
					</configuration>
				</plugin>

				<plugin>
					<groupId>com.spotify</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>${docker-maven-plugin.version}</version>
					<configuration>
						<imageName>${project.groupId}/${project.artifactId}:${project.version}</imageName>  <!--指定镜像名称 仓库/镜像名:标签-->
						<dockerDirectory>${project.basedir}/src/main/docker</dockerDirectory>
						<baseImage>${baseImage}</baseImage>    <!--指定基础镜像，相当于dockerFile中的FROM<image> -->
						<dockerHost>${dockerHost}</dockerHost>  <!-- 指定仓库地址 -->
						<forceTags>true</forceTags>    <!--覆盖相同标签镜像-->
						<entryPoint>["java", "-jar", "/${project.build.finalName}.jar"]</entryPoint> <!-- 容器启动执行的命令，相当于dockerFile的ENTRYPOINT -->
						<!-- copy the service's jar file from target into the root directory of the image -->
						<resources>
							<resource>                        <!-- 指定资源文件 -->
								<targetPath>/</targetPath>            <!-- 指定要复制的目录路径，这里是当前目录 -->
								<directory>${project.build.directory}</directory> <!-- 指定要复制的根目录，这里是target目录 -->
								<include>${project.build.finalName}.jar</include>  <!-- 指定需要拷贝的文件，这里指最后生成的jar包 -->
							</resource>
						</resources>
					</configuration>
				</plugin>

                <plugin>
                    <groupId>org.openapitools</groupId>
                    <artifactId>openapi-generator-maven-plugin</artifactId>
                    <version>${openapi-generator-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>generate</goal>
                            </goals>
                            <configuration>
                                <inputSpec>${project.basedir}/src/main/resources/swagger/api.yml</inputSpec>
                                <generatorName>java</generatorName>
                                <skipValidateSpec>true</skipValidateSpec>
                                <configOptions>
                                    <sourceFolder>src/gen/java/main</sourceFolder>
                                    <delegatePattern>true</delegatePattern>
                                    <title>${project.artifactId}-${project.modelVersion}</title>
                                </configOptions>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

				<plugin>
					<groupId>org.xolstice.maven.plugins</groupId>
					<artifactId>protobuf-maven-plugin</artifactId>
					<version>0.6.1</version>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok-maven-plugin</artifactId>
				<version>${lombok.plugin.version}</version>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>delombok</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

	<dependencyManagement>
		<dependencies>

			<dependency>
				<groupId>com.learn</groupId>
				<artifactId>dependencies</artifactId>
				<version>0.1</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

		</dependencies>
	</dependencyManagement>

</project>
